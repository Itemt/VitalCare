@page
@model RegisterModel
@using CitasEPS.Models.Modules.Common
@{
    ViewData["Title"] = "Registrarse";
}

<div class="auth-page-wrapper">
    <div class="container auth-container">
        <div class="row justify-content-center">
            <div class="col-lg-6 col-md-8 col-sm-10">
                <div class="auth-card">
                    <div class="card-body p-4 p-md-5">
                        <!-- Header Section -->
                        <div class="auth-header">
                            <div class="auth-logo">
                                <i class="bi bi-heart-pulse-fill"></i>
                            </div>
                            <h1 class="auth-title">VitalCare</h1>
                            <p class="auth-subtitle">Crear una nueva cuenta</p>
                        </div>

                        <!-- Main Register Form -->
                        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="auth-form">
                            <div asp-validation-summary="ModelOnly" class="auth-validation-summary" role="alert"></div>
                            
                            <!-- First Name and Last Name -->
                            <div class="auth-row">
                                <div class="auth-col">
                                    <div class="auth-form-floating">
                                        <i class="auth-form-icon bi bi-person-fill"></i>
                                        <input asp-for="Input.FirstName" 
                                               class="auth-form-control" 
                                               placeholder=" " />
                                        <label asp-for="Input.FirstName" class="auth-form-label">Nombres</label>
                                        <span asp-validation-for="Input.FirstName" class="auth-validation-error"></span>
                                    </div>
                                </div>
                                <div class="auth-col">
                                    <div class="auth-form-floating">
                                        <i class="auth-form-icon bi bi-person-badge-fill"></i>
                                        <input asp-for="Input.LastName" 
                                               class="auth-form-control" 
                                               placeholder=" " />
                                        <label asp-for="Input.LastName" class="auth-form-label">Apellidos</label>
                                        <span asp-validation-for="Input.LastName" class="auth-validation-error"></span>
                                    </div>
                                </div>
                            </div>

                            <!-- Document ID -->
                            <div class="auth-form-floating">
                                <i class="auth-form-icon bi bi-card-text"></i>
                                <input asp-for="Input.DocumentId" 
                                       class="auth-form-control" 
                                       placeholder=" " />
                                <label asp-for="Input.DocumentId" class="auth-form-label">Documento de Identidad</label>
                                <span asp-validation-for="Input.DocumentId" class="auth-validation-error"></span>
                            </div>

                            <!-- Gender -->
                            <div class="auth-form-floating">
                                <i class="auth-form-icon bi bi-gender-ambiguous"></i>
                                <select asp-for="Input.Gender" 
                                        class="auth-select" 
                                        asp-items="Html.GetEnumSelectList<Gender>()"
                                        required>
                                    <option value="" disabled selected>Seleccione Género...</option>
                                </select>
                                <label asp-for="Input.Gender" class="auth-form-label">Género</label>
                                <span asp-validation-for="Input.Gender" class="auth-validation-error"></span>
                            </div>

                            <!-- Email -->
                            <div class="auth-form-floating">
                                <i class="auth-form-icon bi bi-envelope-fill"></i>
                                <input asp-for="Input.Email" 
                                       class="auth-form-control" 
                                       autocomplete="username" 
                                       aria-required="true" 
                                       placeholder=" " />
                                <label asp-for="Input.Email" class="auth-form-label">Correo Electrónico</label>
                                <span asp-validation-for="Input.Email" class="auth-validation-error"></span>
                            </div>

                            <!-- Password -->
                            <div class="auth-form-floating">
                                <div class="password-input-wrapper">
                                    <i class="auth-form-icon bi bi-lock-fill"></i>
                                    <input asp-for="Input.Password" 
                                           class="auth-form-control" 
                                           autocomplete="new-password" 
                                           aria-required="true" 
                                           placeholder=" " 
                                           type="password"
                                           id="registerPasswordInput" />
                                    <label asp-for="Input.Password" class="auth-form-label">Contraseña</label>
                                    <button type="button" class="password-toggle" id="toggleRegisterPassword">
                                        <i class="bi bi-eye-slash"></i>
                                    </button>
                                </div>
                                <span asp-validation-for="Input.Password" class="auth-validation-error"></span>
                            </div>

                            <!-- Confirm Password -->
                            <div class="auth-form-floating">
                                <div class="password-input-wrapper">
                                    <i class="auth-form-icon bi bi-shield-lock-fill"></i>
                                    <input asp-for="Input.ConfirmPassword" 
                                           class="auth-form-control" 
                                           autocomplete="new-password" 
                                           aria-required="true" 
                                           placeholder=" " 
                                           type="password"
                                           id="confirmPasswordInput" />
                                    <label asp-for="Input.ConfirmPassword" class="auth-form-label">Confirmar Contraseña</label>
                                    <button type="button" class="password-toggle" id="toggleConfirmPassword">
                                        <i class="bi bi-eye-slash"></i>
                                    </button>
                                </div>
                                <span asp-validation-for="Input.ConfirmPassword" class="auth-validation-error"></span>
                            </div>

                            <!-- Phone and Date of Birth -->
                            <div class="auth-row">
                                <div class="auth-col">
                                    <div class="auth-form-floating">
                                        <i class="auth-form-icon bi bi-telephone-fill"></i>
                                        <input asp-for="Input.PhoneNumber" 
                                               class="auth-form-control" 
                                               placeholder=" " />
                                        <label asp-for="Input.PhoneNumber" class="auth-form-label">Teléfono</label>
                                        <span asp-validation-for="Input.PhoneNumber" class="auth-validation-error"></span>
                                    </div>
                                </div>
                                <div class="auth-col">
                                    <div class="auth-form-floating">
                                        <i class="auth-form-icon bi bi-calendar-date-fill"></i>
                                        <input asp-for="Input.DateOfBirth" 
                                               class="auth-form-control datepicker-register" 
                                               type="text" 
                                               placeholder=" " />
                                        <label asp-for="Input.DateOfBirth" class="auth-form-label">Fecha de Nacimiento</label>
                                        <span asp-validation-for="Input.DateOfBirth" class="auth-validation-error"></span>
                                    </div>
                                </div>
                            </div>

                            <!-- Submit Button -->
                            <button id="registerSubmit" type="submit" class="auth-btn-primary">
                                <i class="bi bi-person-plus me-2"></i>
                                Registrarse
                            </button>

                            <!-- Auth Links -->
                            <div class="auth-links">
                                <div>
                                    <a asp-page="./Login" asp-route-returnUrl="@Model.ReturnUrl" class="auth-link">
                                        <i class="bi bi-box-arrow-in-right me-1"></i>
                                        ¿Ya tienes cuenta? Iniciar sesión
                                    </a>
                                </div>
                            </div>
                        </form>

                        <!-- External Logins Section -->
                        @{
                            if ((Model.ExternalLogins?.Count ?? 0) > 0)
                            {
                                <div class="auth-divider">
                                    <span>O regístrate con</span>
                                </div>
                                <section>
                                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post">
                                        @foreach (var provider in Model.ExternalLogins!)
                                        {
                                            <button type="submit" 
                                                    class="auth-external-btn" 
                                                    name="provider" 
                                                    value="@provider.Name" 
                                                    title="Registrarse con su cuenta @provider.DisplayName">
                                                <i class="bi bi-@provider.Name.ToLower() me-2"></i>
                                                Continuar con @provider.DisplayName
                                            </button>
                                        }
                                    </form>
                                </section>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Hide all validation errors on page load
            document.querySelectorAll('.auth-validation-error, .auth-validation-summary').forEach(function(element) {
                if (!element.textContent.trim()) {
                    element.style.display = 'none';
                }
            });

            // Auto-focus on first input
            const firstInput = document.querySelector('.auth-form-control');
            if (firstInput) {
                firstInput.focus();
            }

            // Add event listeners to show validation only after user interaction
            const inputs = document.querySelectorAll('.auth-form-control, .auth-select');
            inputs.forEach(function(input) {
                let hasInteracted = false;

                // Mark as interacted on focus
                input.addEventListener('focus', function() {
                    hasInteracted = true;
                });

                // Show validation errors only after interaction
                input.addEventListener('blur', function() {
                    if (hasInteracted) {
                        const validationElement = input.parentElement.querySelector('.auth-validation-error');
                        if (validationElement && validationElement.textContent.trim()) {
                            validationElement.style.display = 'flex';
                        }
                    }
                });

                // Also show on input if already interacted
                input.addEventListener('input', function() {
                    if (hasInteracted) {
                        const validationElement = input.parentElement.querySelector('.auth-validation-error');
                        if (validationElement) {
                            // Small delay to allow validation to update
                            setTimeout(function() {
                                if (validationElement.textContent.trim()) {
                                    validationElement.style.display = 'flex';
                                } else {
                                    validationElement.style.display = 'none';
                                }
                            }, 100);
                        }
                    }
                });
            });

            // Password visibility toggles - ESTRUCTURA AISLADA
            const toggleRegisterPassword = document.getElementById('toggleRegisterPassword');
            const registerPasswordInput = document.getElementById('registerPasswordInput');
            
            if (toggleRegisterPassword && registerPasswordInput) {
                toggleRegisterPassword.addEventListener('click', function(e) {
                    e.preventDefault();
                    e.stopPropagation();
                    
                    const icon = this.querySelector('i');
                    
                    if (registerPasswordInput.type === 'password') {
                        registerPasswordInput.type = 'text';
                        if (icon) icon.className = 'bi bi-eye';
                    } else {
                        registerPasswordInput.type = 'password';
                        if (icon) icon.className = 'bi bi-eye-slash';
                    }
                });
            }

            const toggleConfirmPassword = document.getElementById('toggleConfirmPassword');
            const confirmPasswordInput = document.getElementById('confirmPasswordInput');
            
            if (toggleConfirmPassword && confirmPasswordInput) {
                toggleConfirmPassword.addEventListener('click', function(e) {
                    e.preventDefault();
                    e.stopPropagation();
                    
                    const icon = this.querySelector('i');
                    
                    if (confirmPasswordInput.type === 'password') {
                        confirmPasswordInput.type = 'text';
                        if (icon) icon.className = 'bi bi-eye';
                    } else {
                        confirmPasswordInput.type = 'password';
                        if (icon) icon.className = 'bi bi-eye-slash';
                    }
                });
            }

            // Initialize datepicker if available
            if (typeof jQuery !== 'undefined' && jQuery.fn.datepicker) {
                $('.datepicker-register').datepicker({
                    format: 'dd/mm/yyyy',
                    autoclose: true,
                    todayHighlight: true,
                    endDate: new Date(),
                    language: 'es'
                });
            }

            // Initialize Flatpickr as alternative/primary option
            if (typeof flatpickr !== 'undefined') {
                flatpickr(".datepicker-register", {
                    enableTime: false,
                    dateFormat: "Y-m-d", // Format for backend
                    altInput: true,       // Show user-friendly format
                    altFormat: "d/m/Y",   // User-friendly display format
                    locale: "es",         // Spanish locale
                    maxDate: "today",     // Don't allow future dates
                    allowInput: true,     // Allow manual input
                    placeholder: "dd/mm/aaaa",
                    // Hacer que el input alternativo use las mismas clases
                    onReady: function(selectedDates, dateStr, instance) {
                        // Agregar las clases del sistema de auth al input alternativo
                        if (instance.altInput) {
                            instance.altInput.classList.add('auth-form-control');
                        }
                    }
                });
            }

            // Password visibility toggles - mejorado con verificación de existencia
            const toggleRegisterPassword = document.getElementById('toggleRegisterPassword');
            const registerPasswordInput = document.getElementById('registerPasswordInput');
            
            if (toggleRegisterPassword && registerPasswordInput) {
                toggleRegisterPassword.addEventListener('click', function(e) {
                    e.preventDefault(); // Prevenir cualquier comportamiento por defecto
                    e.stopPropagation(); // Detener propagación del evento
                    
                    const icon = this.querySelector('i');
                    
                    if (registerPasswordInput.type === 'password') {
                        registerPasswordInput.type = 'text';
                        if (icon) icon.className = 'bi bi-eye';
                    } else {
                        registerPasswordInput.type = 'password';
                        if (icon) icon.className = 'bi bi-eye-slash';
                    }
                });
            }

            const toggleConfirmPassword = document.getElementById('toggleConfirmPassword');
            const confirmPasswordInput = document.getElementById('confirmPasswordInput');
            
            if (toggleConfirmPassword && confirmPasswordInput) {
                toggleConfirmPassword.addEventListener('click', function(e) {
                    e.preventDefault(); // Prevenir cualquier comportamiento por defecto
                    e.stopPropagation(); // Detener propagación del evento
                    
                    const icon = this.querySelector('i');
                    
                    if (confirmPasswordInput.type === 'password') {
                        confirmPasswordInput.type = 'text';
                        if (icon) icon.className = 'bi bi-eye';
                    } else {
                        confirmPasswordInput.type = 'password';
                        if (icon) icon.className = 'bi bi-eye-slash';
                    }
                });
            }

            // Loading state for submit button
            const registerForm = document.getElementById('registerForm');
            if (registerForm) {
                registerForm.addEventListener('submit', function() {
                    const submitBtn = document.getElementById('registerSubmit');
                    if (submitBtn) {
                        submitBtn.classList.add('auth-btn-loading');
                        submitBtn.disabled = true;
                    }
                    
                    // Show all validation errors on submit
                    document.querySelectorAll('.auth-validation-error, .auth-validation-summary').forEach(function(element) {
                        if (element.textContent.trim()) {
                            element.style.display = 'flex';
                        }
                    });
                });
            }
        });
    </script>
}
