@page
@model LoginModel

@{
    ViewData["Title"] = "Iniciar Sesión";
}

<div class="auth-page-wrapper">
    <div class="container auth-container">
        <div class="row justify-content-center">
            <div class="col-lg-5 col-md-7 col-sm-9">
                <div class="auth-card">
                    <div class="card-body p-4 p-md-5">
                        <!-- Header Section -->
                        <div class="auth-header">
                            <div class="auth-logo">
                                <i class="bi bi-heart-pulse-fill"></i>
                            </div>
                            <h1 class="auth-title">VitalCare</h1>
                            <p class="auth-subtitle">Bienvenido de vuelta</p>
                        </div>

                        <!-- Main Login Form -->
                        <form id="account" method="post" class="auth-form">
                            <div asp-validation-summary="ModelOnly" class="auth-validation-summary" role="alert"></div>
                            
                            <!-- Email Field -->
                            <div class="auth-form-floating">
                                <i class="auth-form-icon bi bi-envelope-fill"></i>
                                <input asp-for="Input.Email" 
                                       class="auth-form-control" 
                                       autocomplete="username" 
                                       aria-required="true" 
                                       placeholder=" " />
                                <label asp-for="Input.Email" class="auth-form-label">Correo Electrónico</label>
                                <span asp-validation-for="Input.Email" class="auth-validation-error"></span>
                            </div>

                            <!-- Password Field -->
                            <div class="auth-form-floating">
                                <i class="auth-form-icon bi bi-lock-fill"></i>
                                <input asp-for="Input.Password" 
                                       class="auth-form-control" 
                                       autocomplete="current-password" 
                                       aria-required="true" 
                                       placeholder=" " 
                                       type="password"
                                       id="loginPasswordInput" />
                                <label asp-for="Input.Password" class="auth-form-label">Contraseña</label>
                                <button type="button" class="password-toggle" id="toggleLoginPassword">
                                    <i class="bi bi-eye-slash"></i>
                                </button>
                                <span asp-validation-for="Input.Password" class="auth-validation-error"></span>
                            </div>

                            <!-- Remember Me -->
                            <div class="auth-checkbox">
                                <input class="form-check-input" asp-for="Input.RememberMe" type="checkbox" />
                                <label asp-for="Input.RememberMe" class="form-check-label">
                                    @Html.DisplayNameFor(m => m.Input.RememberMe)
                                </label>
                            </div>

                            <!-- Submit Button -->
                            <button id="login-submit" type="submit" class="auth-btn-primary">
                                <i class="bi bi-box-arrow-in-right me-2"></i>
                                Iniciar Sesión
                            </button>

                            <!-- Auth Links -->
                            <div class="auth-links">
                                <div class="mb-2">
                                    <a id="forgot-password" asp-page="./ForgotPassword" class="auth-link">
                                        <i class="bi bi-key me-1"></i>
                                        ¿Olvidó su contraseña?
                                    </a>
                                </div>
                                <div class="mb-2">
                                    <a asp-page="./Register" asp-route-returnUrl="@Model.ReturnUrl" class="auth-link">
                                        <i class="bi bi-person-plus me-1"></i>
                                        Registrarse como nuevo usuario
                                    </a>
                                </div>
                                <div>
                                    <a id="resend-confirmation" asp-page="./ResendEmailConfirmation" class="auth-link">
                                        <i class="bi bi-envelope-check me-1"></i>
                                        Reenviar confirmación de correo
                                    </a>
                                </div>
                            </div>
                        </form>

                        <!-- External Logins Section -->
                        @{
                            if ((Model.ExternalLogins?.Count ?? 0) > 0)
                            {
                                <div class="auth-divider">
                                    <span>O continúa con</span>
                                </div>
                                <section>
                                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post">
                                        @foreach (var provider in Model.ExternalLogins!)
                                        {
                                            <button type="submit" 
                                                    class="auth-external-btn" 
                                                    name="provider" 
                                                    value="@provider.Name" 
                                                    title="Iniciar sesión con su cuenta @provider.DisplayName">
                                                <i class="bi bi-@provider.Name.ToLower() me-2"></i>
                                                Continuar con @provider.DisplayName
                                            </button>
                                        }
                                    </form>
                                </section>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Hide all validation errors on page load
        document.addEventListener('DOMContentLoaded', function() {
            console.log('Login page loaded');
            
            // Hide validation summaries and errors initially
            document.querySelectorAll('.auth-validation-error, .auth-validation-summary').forEach(function(element) {
                if (!element.textContent.trim()) {
                    element.style.display = 'none';
                }
            });

            // Auto-focus on first input
            const firstInput = document.querySelector('.auth-form-control');
            if (firstInput) {
                firstInput.focus();
            }

            // Password visibility toggle - SOLUCIÓN EXTREMA: REEMPLAZAR INPUT COMPLETO
            const toggleLoginPassword = document.getElementById('toggleLoginPassword');
            let loginPasswordInput = document.getElementById('loginPasswordInput');
            
            if (toggleLoginPassword && loginPasswordInput) {
                let isPasswordVisible = false;
                
                toggleLoginPassword.addEventListener('click', function(e) {
                    e.preventDefault();
                    e.stopPropagation();
                    
                    const icon = this.querySelector('i');
                    const currentValue = loginPasswordInput.value;
                    const parent = loginPasswordInput.parentNode;
                    
                    console.log('REEMPLAZANDO INPUT COMPLETO!');
                    
                    // Crear nuevo input
                    const newInput = document.createElement('input');
                    
                    // Copiar todos los atributos del input original
                    newInput.className = loginPasswordInput.className;
                    newInput.id = loginPasswordInput.id;
                    newInput.name = loginPasswordInput.name;
                    newInput.placeholder = loginPasswordInput.placeholder;
                    newInput.setAttribute('asp-for', 'Input.Password');
                    newInput.setAttribute('aria-required', 'true');
                    newInput.value = currentValue;
                    
                    if (!isPasswordVisible) {
                        // Cambiar a texto visible
                        newInput.type = 'text';
                        newInput.setAttribute('autocomplete', 'off');
                        if (icon) icon.className = 'bi bi-eye';
                        isPasswordVisible = true;
                        console.log('Mostrado como TEXTO');
                    } else {
                        // Cambiar a password oculto
                        newInput.type = 'password';
                        newInput.setAttribute('autocomplete', 'current-password');
                        if (icon) icon.className = 'bi bi-eye-slash';
                        isPasswordVisible = false;
                        console.log('Mostrado como PASSWORD');
                    }
                    
                    // Reemplazar el input en el DOM
                    parent.replaceChild(newInput, loginPasswordInput);
                    loginPasswordInput = newInput;
                    
                    // Enfocar el nuevo input
                    newInput.focus();
                    newInput.setSelectionRange(currentValue.length, currentValue.length);
                });
            } else {
                console.error('NO SE ENCONTRARON LOS ELEMENTOS PARA PASSWORD TOGGLE');
            }

            // Add event listeners to show validation only after user interaction
            const inputs = document.querySelectorAll('.auth-form-control, .auth-select');
            inputs.forEach(function(input) {
                let hasInteracted = false;

                // Mark as interacted on focus
                input.addEventListener('focus', function() {
                    hasInteracted = true;
                });

                // Show validation errors only after interaction
                input.addEventListener('blur', function() {
                    if (hasInteracted) {
                        const validationElement = input.parentElement.querySelector('.auth-validation-error');
                        if (validationElement && validationElement.textContent.trim()) {
                            validationElement.style.display = 'flex';
                        }
                    }
                });

                // Also show on input if already interacted
                input.addEventListener('input', function() {
                    if (hasInteracted) {
                        const validationElement = input.parentElement.querySelector('.auth-validation-error');
                        if (validationElement) {
                            // Small delay to allow validation to update
                            setTimeout(function() {
                                if (validationElement.textContent.trim()) {
                                    validationElement.style.display = 'flex';
                                } else {
                                    validationElement.style.display = 'none';
                                }
                            }, 100);
                        }
                    }
                });
            });
        });

        // Loading state for submit button
        document.getElementById('account').addEventListener('submit', function() {
            const submitBtn = document.getElementById('login-submit');
            submitBtn.classList.add('auth-btn-loading');
            submitBtn.disabled = true;
            
            // Show all validation errors on submit
            document.querySelectorAll('.auth-validation-error, .auth-validation-summary').forEach(function(element) {
                if (element.textContent.trim()) {
                    element.style.display = 'flex';
                }
            });
        });
    </script>
}
