@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
    var user = await UserManager.GetUserAsync(User);
    var email = user?.Email;
    var isEmailConfirmed = user != null && await UserManager.IsEmailConfirmedAsync(user);
}

<div class="card shadow-sm mb-3">
    <div class="card-header bg-vitalcare-doctor text-white text-center">
        <h5 class="mb-0 text-white text-shadow-custom">Navegaci칩n de Perfil</h5>
    </div>
    <ul class="nav nav-pills flex-column p-2 manage-nav-pills">
        <li class="nav-item">
            <a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">
                <i class="bi bi-person-fill me-2"></i>Perfil
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">
                <i class="bi bi-envelope-fill me-2"></i>Correo Electr칩nico
                @if (!isEmailConfirmed)
                {
                    <span class="badge bg-warning text-dark ms-1">No Confirmado</span>
                }
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">
                <i class="bi bi-key-fill me-2"></i>Contrase침a
            </a>
        </li>
        @if (hasExternalLogins)
        {
            <li id="external-logins" class="nav-item">
                <a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">
                    <i class="bi bi-hdd-stack-fill me-2"></i>Inicios de sesi칩n externos
                </a>
            </li>
        }
    </ul>
</div>
