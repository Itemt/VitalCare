@page
@model CitasEPS.Pages.UserDashboards.Patient.PatientIndexModel
@using Microsoft.AspNetCore.Identity
@using CitasEPS.Models
@inject SignInManager<User> UserManagerAccessor
@inject UserManager<User> AspNetUserManager

@{
    ViewData["Title"] = "Portal del Paciente - VitalCare";
    var currentUser = await AspNetUserManager.GetUserAsync(User);
    var userFirstName = currentUser?.FirstName;
}

<!-- Hero Section with Patient Image -->
<div class="container-fluid py-5 mb-4" style="background: linear-gradient(135deg, #134e4a 0%, #065f46 50%, #064e3b 100%); border-radius: 0 0 1.5rem 1.5rem;">
    <div class="container">
        <div class="row align-items-center">
            <!-- Welcome Text Column -->
            <div class="col-lg-8">
                <h1 class="display-5 fw-bold mb-3" style="color: white; text-shadow: 2px 2px 4px rgba(0,0,0,0.5);">
                    <i class="bi bi-person-heart me-2"></i>
                    @if (!string.IsNullOrEmpty(userFirstName))
                    {
                        <span>Bienvenido, <strong style="color: #10b981;">@userFirstName</strong></span>
                    }
                    else
                    {
                        <span>Portal del Paciente</span>
                    }
                </h1>
                <p class="lead mb-0" style="color: white; text-shadow: 1px 1px 2px rgba(0,0,0,0.3);">
                    Su salud en sus manos - VitalCare IPS
                </p>
                <p class="mt-2 mb-0" style="color: #86efac; text-shadow: 1px 1px 2px rgba(0,0,0,0.3);">
                    <i class="bi bi-shield-check me-2"></i>
                    Cuidando su bienestar con tecnología y dedicación
                </p>
            </div>
            
            <!-- Patient Image Column -->
            <div class="col-lg-4 text-center">
                <div class="position-relative">
                    <img src="/images/Pacientes.png" alt="Paciente VitalCare" 
                         class="img-fluid rounded-circle shadow-lg" 
                         style="max-width: 200px; border: 4px solid white; box-shadow: 0 8px 32px rgba(0,0,0,0.3);">
                    <div class="position-absolute top-0 start-100 translate-middle">
                        <span class="badge rounded-pill bg-success p-2">
                            <i class="bi bi-heart-pulse"></i>
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Main Dashboard Content -->
<div class="container py-4" style="background-color: white;">
    
    <!-- Extended Next Appointment Section -->
    <div class="row g-4 mb-5">
        <div class="col-12">
            <div class="card border-0 shadow-lg" style="background: linear-gradient(135deg, #f0fdf4 0%, #dcfce7 100%); border-left: 5px solid #134e4a !important;">
                <div class="card-body p-4">
                    <div class="row align-items-center">
                        <div class="col-md-8">
                            <h5 class="card-title text-dark fw-bold mb-3">
                                <i class="bi bi-calendar-event me-2" style="color: #134e4a;"></i>
                                Próxima Cita Médica
                            </h5>
                            <div id="nextAppointmentDetails">
                                <div class="text-center py-4">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="visually-hidden">Cargando...</span>
                                    </div>
                                    <p class="text-muted mt-2 mb-0">Cargando información de citas...</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 text-end">
                            <a asp-page="/Appointments/Create" class="btn btn-lg fw-bold text-white" style="background: #134e4a;">
                                <i class="bi bi-plus-circle me-2"></i>Nueva Cita
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Health Summary Row -->
    <div class="row g-4 mb-5">
        <div class="col-lg-4">
            <div class="card border-0 shadow-sm h-100" style="background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);">
                <div class="card-body text-center p-4">
                    <div class="text-warning mb-3">
                        <i class="bi bi-prescription2 fs-1"></i>
                    </div>
                    <h6 class="card-title text-dark fw-bold">Mis Recetas</h6>
                    <h4 class="text-warning fw-bold" id="patientPrescriptionsCount">0</h4>
                    <p class="card-text text-muted small mb-2">recetas asignadas</p>
                    <a asp-page="/Appointments/MyPrescriptions" class="btn btn-sm btn-warning">Ver Recetas</a>
                </div>
            </div>
        </div>
        
        <div class="col-lg-8">
            <div class="card border-0 shadow-sm h-100" style="background: linear-gradient(135deg, #f3e8ff 0%, #e9d5ff 100%);">
                <div class="card-body p-4">
                    <div class="row align-items-center h-100">
                        <div class="col-md-3 text-center">
                            <div class="text-purple mb-3" style="color: #7c3aed;">
                                <i class="bi bi-heart-pulse fs-1"></i>
                            </div>
                            <h6 class="card-title text-dark fw-bold">Estado de Salud</h6>
                            <span class="badge bg-secondary fs-6" id="healthStatus">Sin datos</span>
                        </div>
                        <div class="col-md-6">
                            <div id="healthMetrics">
                                <div class="text-center py-3">
                                    <i class="bi bi-clipboard-heart fs-2 text-muted mb-2"></i>
                                    <p class="text-muted mb-1">Por ingresar</p>
                                    <small class="text-muted">¿Cómo te sientes hoy?</small>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 text-end">
                            <a asp-page="/UserDashboards/Patient/HealthStatus" class="btn btn-primary">
                                <i class="bi bi-pencil-square me-1"></i>Actualizar
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Health Tips and Curiosities Section -->
    <div class="row">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-header border-0 py-3" style="background: linear-gradient(135deg, #134e4a 0%, #065f46 100%);">
                    <h5 class="mb-0 fw-bold text-white health-tips-title">
                        <i class="bi bi-lightbulb me-2"></i>
                        Consejos de Salud y Curiosidades
                    </h5>
                </div>
                <div class="card-body">
                    <div id="healthTipsContainer">
                        <div class="text-center py-4">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Cargando consejos...</span>
                            </div>
                            <p class="text-muted mt-2 mb-0">Cargando consejos de salud...</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
/* Card hover effects */
.card:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 3rem rgba(0,0,0,.175) !important;
}

.card {
    transition: all 0.3s ease;
}

/* Button hover effects */
.btn {
    transition: all 0.3s ease;
}

.btn:hover {
    transform: translateY(-1px);
    box-shadow: 0 0.5rem 1rem rgba(0,0,0,.15);
}

/* Badge styling */
.badge {
    font-size: 0.75rem;
    padding: 0.5rem 0.75rem;
}

/* Health tips animation */
@@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.health-tip-animated {
    animation: fadeInUp 0.5s ease-out;
}

/* Title shadows */
.health-tips-title {
    text-shadow: 0 2px 4px rgba(0,0,0,0.3);
}

h5.fw-bold, h6.fw-bold {
    text-shadow: 0 1px 3px rgba(0,0,0,0.2);
}
</style>

@section Scripts {
    <script>
        let currentTipIndex = 0;
        const healthTips = [
            {
                icon: 'bi-droplet',
                color: 'success',
                title: 'Hidratación',
                tip: 'Beba al menos 8 vasos de agua al día para mantener su cuerpo hidratado.'
            },
            {
                icon: 'bi-moon',
                color: 'info',
                title: 'Descanso',
                tip: 'Duerma entre 7-9 horas diarias para una recuperación óptima.'
            },
            {
                icon: 'bi-heart',
                color: 'danger',
                title: 'Ejercicio',
                tip: '30 minutos de actividad física moderada al día mejoran su salud cardiovascular.'
            },
            {
                icon: 'bi-apple',
                color: 'success',
                title: 'Alimentación',
                tip: 'Incluya 5 porciones de frutas y verduras en su dieta diaria.'
            },
            {
                icon: 'bi-sun',
                color: 'warning',
                title: 'Vitamina D',
                tip: 'Exponerse al sol por 15-20 minutos al día ayuda a producir vitamina D natural.'
            },
            {
                icon: 'bi-emoji-smile',
                color: 'primary',
                title: 'Salud Mental',
                tip: 'Practique técnicas de relajación como la meditación para reducir el estrés.'
            },
            {
                icon: 'bi-shield-check',
                color: 'success',
                title: 'Prevención',
                tip: 'Realice chequeos médicos regulares para detectar problemas de salud temprano.'
            },
            {
                icon: 'bi-lungs',
                color: 'info',
                title: 'Respiración',
                tip: 'Practique respiración profunda para oxigenar mejor su cuerpo y reducir el estrés.'
            }
        ];

        // Load patient dashboard data
        document.addEventListener('DOMContentLoaded', function() {
            loadPatientDashboardData();
            startHealthTipsRotation();
        });

        function loadPatientDashboardData() {
            // Load real data from backend
            loadNextAppointment();
            loadPrescriptionsCount();
            loadHealthStatus();
        }

        function loadNextAppointment() {
            console.log('Cargando próxima cita...');
            
            // Primero probar el endpoint simple para debuggear
            fetch('/api/patient/simple-appointment')
                .then(response => {
                    console.log('Respuesta recibida:', response.status);
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    console.log('Datos de debug recibidos:', data);
                    
                    // Ahora probar el endpoint principal
                    return fetch('/api/patient/next-appointment');
                })
                .then(response => {
                    console.log('Respuesta principal:', response.status);
                    return response.json();
                })
                .then(data => {
                    console.log('Datos principales recibidos:', data);
                    const appointmentDetails = document.getElementById('nextAppointmentDetails');
                    
                    if (data.success && data.appointment) {
                        const appointment = data.appointment;
                        const appointmentDate = new Date(appointment.dateTime);
                        const formattedDate = appointmentDate.toLocaleDateString('es-ES', {
                            weekday: 'long',
                            year: 'numeric',
                            month: 'long',
                            day: 'numeric'
                        });
                        const formattedTime = appointmentDate.toLocaleTimeString('es-ES', {
                            hour: '2-digit',
                            minute: '2-digit'
                        });

                        appointmentDetails.innerHTML = `
                            <div class="row align-items-center">
                                <div class="col-md-8">
                                    <h6 class="mb-1 fw-bold" style="color: #134e4a;">${formattedDate} - ${formattedTime}</h6>
                                    <p class="mb-1">${appointment.doctorName} - ${appointment.appointmentType}</p>
                                    <small class="text-muted">${appointment.location || 'Consultorio por confirmar'}</small>
                                    <div class="mt-2">
                                        <span class="badge ${getStatusBadgeClass(appointment.status)} me-2">${appointment.status}</span>
                                        <small class="text-muted">Recuerde llegar 15 minutos antes</small>
                                    </div>
                                </div>
                                <div class="col-md-4 text-end">
                                    <a href="/Appointments/Details/${appointment.id}" class="btn btn-sm btn-outline-primary mb-1">Ver Detalles</a>
                                    <a href="/Appointments/Edit/${appointment.id}" class="btn btn-sm btn-outline-secondary">Reprogramar</a>
                                </div>
                            </div>
                        `;
                    } else {
                        console.log('No hay citas o error:', data.message || 'Sin mensaje');
                        appointmentDetails.innerHTML = `
                            <div class="text-center py-4">
                                <i class="bi bi-calendar-x fs-1 text-muted"></i>
                                <p class="text-muted mt-2 mb-0">No hay citas próximas programadas</p>
                                <small class="text-muted">${data.message || 'Programe su próxima cita para mantener un seguimiento de su salud'}</small>
                            </div>
                        `;
                    }
                })
                .catch(error => {
                    console.error('Error cargando cita:', error);
                    const appointmentDetails = document.getElementById('nextAppointmentDetails');
                    appointmentDetails.innerHTML = `
                        <div class="text-center py-4">
                            <i class="bi bi-exclamation-triangle fs-1 text-warning"></i>
                            <p class="text-muted mt-2 mb-0">Error al cargar información de citas</p>
                            <small class="text-muted">Intente recargar la página - Error: ${error.message}</small>
                        </div>
                    `;
                });
        }

        function loadPrescriptionsCount() {
            fetch('/api/patient/prescriptions-count')
                .then(response => response.json())
                .then(data => {
                    const countElement = document.getElementById('patientPrescriptionsCount');
                    if (data.success) {
                        countElement.textContent = data.count || '0';
                    } else {
                        countElement.textContent = '0';
                    }
                })
                .catch(error => {
                    console.error('Error loading prescriptions count:', error);
                    document.getElementById('patientPrescriptionsCount').textContent = '0';
                });
        }

        function getStatusBadgeClass(status) {
            switch(status?.toLowerCase()) {
                case 'confirmada':
                case 'confirmed':
                    return 'bg-success';
                case 'pendiente':
                case 'pending':
                    return 'bg-warning';
                case 'cancelada':
                case 'cancelled':
                    return 'bg-danger';
                default:
                    return 'bg-info';
            }
        }

        function loadHealthStatus() {
            fetch('/api/patient/health-status')
                .then(response => response.json())
                .then(data => {
                    const healthMetrics = document.getElementById('healthMetrics');
                    const statusElement = document.getElementById('healthStatus');
                    
                    if (data.success && data.healthData) {
                        const health = data.healthData;
                        
                        // Update health metrics display
                        healthMetrics.innerHTML = `
                            <div class="mb-2">
                                <small class="text-muted">IMC:</small>
                                <span class="fw-bold ms-2">${health.bmi || 'Sin datos'}</span>
                            </div>
                            <div class="mb-2">
                                <small class="text-muted">Presión Arterial:</small>
                                <span class="fw-bold ms-2">${health.bloodPressure || 'Sin datos'}</span>
                            </div>
                            <div>
                                <small class="text-muted">Última actualización:</small>
                                <span class="fw-bold ms-2">${formatDate(health.lastUpdate)}</span>
                            </div>
                        `;
                        
                        // Update status badge
                        statusElement.textContent = health.status || 'Sin evaluar';
                        statusElement.className = `badge ${getHealthStatusClass(health.status)} fs-6`;
                    } else {
                        // No health data available - keep default empty state
                        statusElement.textContent = 'Sin datos';
                        statusElement.className = 'badge bg-secondary fs-6';
                    }
                })
                .catch(error => {
                    console.error('Error loading health status:', error);
                    // Keep default empty state on error
                    const statusElement = document.getElementById('healthStatus');
                    statusElement.textContent = 'Sin datos';
                    statusElement.className = 'badge bg-secondary fs-6';
                });
        }

        function getHealthStatusClass(status) {
            switch(status?.toLowerCase()) {
                case 'excelente':
                    return 'bg-success';
                case 'bueno':
                case 'saludable':
                    return 'bg-info';
                case 'aceptable':
                    return 'bg-warning';
                case 'requiere atención':
                case 'malo':
                    return 'bg-danger';
                default:
                    return 'bg-secondary';
            }
        }

        function formatDate(dateString) {
            if (!dateString) return 'Nunca';
            
            const date = new Date(dateString);
            return date.toLocaleDateString('es-ES', {
                year: 'numeric',
                month: 'short',
                day: 'numeric'
            });
        }

        function startHealthTipsRotation() {
            // Change tips every 15 seconds
            setInterval(function() {
                currentTipIndex = (currentTipIndex + 1) % healthTips.length;
                updateHealthTips();
            }, 15000); // 15 seconds
            
            // Initial load
            updateHealthTips();
        }

        function updateHealthTips() {
            const container = document.getElementById('healthTipsContainer');
            const tip1 = healthTips[currentTipIndex];
            const tip2 = healthTips[(currentTipIndex + 1) % healthTips.length];
            
            container.innerHTML = `
                <div class="row g-4 health-tip-animated">
                    <div class="col-md-6">
                        <div class="d-flex align-items-start p-3 bg-light rounded">
                            <div class="me-3">
                                <div class="bg-${tip1.color} bg-opacity-10 rounded-circle d-flex align-items-center justify-content-center" style="width: 40px; height: 40px;">
                                    <i class="bi ${tip1.icon} text-${tip1.color}"></i>
                                </div>
                            </div>
                            <div class="flex-grow-1">
                                <h6 class="mb-1 fw-bold">${tip1.title}</h6>
                                <small class="text-muted">${tip1.tip}</small>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="d-flex align-items-start p-3 bg-light rounded">
                            <div class="me-3">
                                <div class="bg-${tip2.color} bg-opacity-10 rounded-circle d-flex align-items-center justify-content-center" style="width: 40px; height: 40px;">
                                    <i class="bi ${tip2.icon} text-${tip2.color}"></i>
                                </div>
                            </div>
                            <div class="flex-grow-1">
                                <h6 class="mb-1 fw-bold">${tip2.title}</h6>
                                <small class="text-muted">${tip2.tip}</small>
                            </div>
                        </div>
                    </div>
                </div>
            `;
        }
    </script>
} 
