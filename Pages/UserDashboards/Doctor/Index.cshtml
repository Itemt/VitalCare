@page
@model CitasEPS.Pages.UserDashboards.Doctor.DoctorIndexModel
@using Microsoft.AspNetCore.Identity
@using CitasEPS.Models
@inject SignInManager<User> UserManagerAccessor
@inject UserManager<User> AspNetUserManager

@{
    ViewData["Title"] = "Portal Médico - VitalCare";
    var currentUser = await AspNetUserManager.GetUserAsync(User);
    var userFirstName = currentUser?.FirstName;
}

@section Styles {
    <link rel="stylesheet" href="~/css/modules/doctor/doctor-dashboard.css" />
}

<!-- Enhanced Hero Section for Doctor -->
<div class="container-fluid bg-gradient-primary text-white py-5 mb-4" style="background: linear-gradient(135deg, #0f172a 0%, #1e293b 30%, #334155 70%, #475569 100%); border-radius: 1.5rem; margin: 1rem; position: relative; overflow: hidden; color: white !important;">
    <!-- Background pattern -->
    <div style="position: absolute; top: 0; right: 0; bottom: 0; left: 0; background-image: url('/images/doctor-dashboard-bg-subtle.svg'); background-repeat: no-repeat; background-position: center right; background-size: contain; opacity: 0.05;"></div>
    
    <div class="container position-relative">
        <div class="row align-items-center">
            <div class="col-lg-8">
                <div class="hero-content">
                    <h1 class="display-4 fw-bold mb-3" style="color: white !important; text-shadow: 2px 2px 4px rgba(0,0,0,0.8);">
                        <i class="bi bi-clipboard-pulse me-3"></i>
                        @if (!string.IsNullOrEmpty(userFirstName))
                        {
                            <span>Bienvenido, Dr(a). <strong>@userFirstName</strong></span>
                        }
                        else
                        {
                            <span>Portal Médico</span>
                        }
                    </h1>
                    <p class="lead mb-4" style="color: white !important; text-shadow: 1px 1px 3px rgba(0,0,0,0.8);">Gestión profesional de pacientes y atención médica integral</p>
                    <div class="hero-subtitle">
                        <span class="badge px-3 py-2 rounded-pill" style="background-color: rgba(255,255,255,0.2); color: white !important; border: 1px solid rgba(255,255,255,0.4); text-shadow: 1px 1px 2px rgba(0,0,0,0.7);">
                            <i class="bi bi-hospital me-2"></i>VitalCare IPS
                        </span>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 text-center">
                <div class="hero-image">
                    <img src="~/images/doctor.png" alt="Doctor" class="img-fluid rounded-circle shadow-lg" style="max-width: 250px; border: 4px solid rgba(255,255,255,0.2);">
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Main Dashboard Content without container background -->
<div class="container-fluid py-4">
    
    <!-- Top Row: Medical Tools and Performance -->
    <div class="row g-4 mb-5">
        <!-- Medical Tools -->
        <div class="col-lg-6">
            <div class="card border-0 shadow-lg h-100">
                <div class="card-header border-0 py-3" style="background: linear-gradient(135deg, #1e40af 0%, #3b82f6 100%);">
                    <h5 class="mb-0 fw-bold text-white">
                        <i class="bi bi-file-earmark-medical me-2 text-white"></i>
                        Herramientas Médicas
                    </h5>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-3">
                        <a asp-page="/UserDashboards/Doctor/Prescriptions" class="btn btn-medical-primary">
                            <i class="bi bi-prescription2 me-2"></i>
                            Gestionar Prescripciones (@Model.TotalPrescriptions)
                        </a>
                        <div class="row g-3">
                            <div class="col-6">
                                <a asp-page="/UserDashboards/Doctor/Patients" class="btn btn-medical-secondary w-100">
                                    <i class="bi bi-person-lines-fill me-2"></i>
                                    Ver Pacientes
                                </a>
                            </div>
                            <div class="col-6">
                                <a asp-page="/UserDashboards/Doctor/PatientHistory" class="btn btn-medical-secondary w-100">
                                    <i class="bi bi-journal-medical me-2"></i>
                                    Historiales
                                </a>
                            </div>
                        </div>
                        <div class="row g-3">
                            <div class="col-6">
                                <a asp-page="/UserDashboards/Doctor/MyRatings" class="btn btn-medical-secondary w-100">
                                    <i class="bi bi-star me-2"></i>
                                    Calificaciones
                                </a>
                            </div>
                            <div class="col-6">
                                <a asp-area="Identity" asp-page="/Account/Manage/Index" class="btn btn-medical-secondary w-100">
                                    <i class="bi bi-gear me-2"></i>
                                    Mi Perfil
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Performance -->
        <div class="col-lg-6">
            <div class="card border-0 shadow-lg h-100">
                <div class="card-header border-0 py-3" style="background: linear-gradient(135deg, #059669 0%, #10b981 100%);">
                    <h5 class="mb-0 fw-bold text-white">
                        <i class="bi bi-graph-up me-2 text-white"></i>
                        Rendimiento
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row g-3 mb-4">
                        <div class="col-4">
                            <div class="stat-card stat-card-primary">
                                <div class="stat-icon">
                                    <i class="bi bi-calendar-day"></i>
                                </div>
                                <div class="stat-content">
                                    <h3 class="stat-number" id="todayAppointmentsStat">@Model.TodayAppointments</h3>
                                    <p class="stat-label">Citas Hoy</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="stat-card stat-card-success">
                                <div class="stat-icon">
                                    <i class="bi bi-check-circle"></i>
                                </div>
                                <div class="stat-content">
                                    <h3 class="stat-number" id="confirmedAppointmentsStat">@Model.ConfirmedAppointments</h3>
                                    <p class="stat-label">Confirmadas</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="stat-card stat-card-warning">
                                <div class="stat-icon">
                                    <i class="bi bi-clipboard-check"></i>
                                </div>
                                <div class="stat-content">
                                    <h3 class="stat-number" id="completedAppointmentsStat">0</h3>
                                    <p class="stat-label">Completadas</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="satisfaction-section">
                        <div class="satisfaction-card">
                            <h6 class="satisfaction-title">Satisfacción de Pacientes</h6>
                            <div class="satisfaction-stars" id="satisfactionStars">
                                <i class="bi bi-star star-rating"></i>
                                <i class="bi bi-star star-rating"></i>
                                <i class="bi bi-star star-rating"></i>
                                <i class="bi bi-star star-rating"></i>
                                <i class="bi bi-star star-rating"></i>
                            </div>
                            <p class="satisfaction-text" id="satisfactionText">0% de satisfacción</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Patient Search Section -->
    <div class="row g-4 mb-5">
        <div class="col-12">
            <div class="card border-0 shadow-lg">
                <div class="card-header border-0 py-3" style="background: linear-gradient(135deg, #7c3aed 0%, #a855f7 100%);">
                    <h5 class="mb-0 fw-bold text-white">
                        <i class="bi bi-search me-2 text-white"></i>
                        Buscar Paciente
                    </h5>
                </div>
                <div class="card-body">
                    <form id="doctorPatientSearchForm" class="d-flex">
                        <input type="text" id="doctorPatientSearchInput" class="form-control me-2" placeholder="Buscar paciente por cédula...">
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-search"></i> Buscar
                        </button>
                    </form>
                    <div id="searchResults" class="mt-3"></div>
                </div>
            </div>
        </div>
    </div>

    <!-- Next Appointment Section -->
    <div class="row g-4 mb-5">
        <div class="col-12">
            <div class="card border-0 shadow-lg">
                <div class="card-header border-0 py-3" style="background: linear-gradient(135deg, #dc2626 0%, #ef4444 100%);">
                    <h5 class="mb-0 fw-bold text-white">
                        <i class="bi bi-calendar-event me-2 text-white"></i>
                        Próxima Cita
                    </h5>
                </div>
                <div class="card-body">
                    <div id="nextAppointment">
                        <div class="text-center py-3">
                            <i class="bi bi-clock fs-3 text-muted"></i>
                            <p class="text-muted mt-2">Cargando próxima cita...</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- All Appointments Section -->
    <div class="row">
        <div class="col-12">
            <div class="card border-0 shadow-lg">
                <div class="card-header border-0 py-3" style="background: linear-gradient(135deg, #0891b2 0%, #06b6d4 100%);">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0 fw-bold text-white">
                            <i class="bi bi-calendar-check me-2 text-white"></i>
                            Todas las Citas
                        </h5>
                        <a asp-page="/UserDashboards/Doctor/Agenda" class="btn btn-sm btn-outline-light">Ver Agenda Completa</a>
                    </div>
                </div>
                <div class="card-body">
                    <div id="allAppointmentsList">
                        <div class="text-center py-4">
                            <i class="bi bi-calendar-check fs-1 text-muted"></i>
                            <p class="text-muted mt-2">Cargando citas...</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
/* Card hover effects */
.card:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 3rem rgba(0,0,0,.175) !important;
}

.card {
    transition: all 0.3s ease;
}

/* Button hover effects */
.btn {
    transition: all 0.3s ease;
}

.btn:hover {
    transform: translateY(-1px);
    box-shadow: 0 0.5rem 1rem rgba(0,0,0,.15);
}

/* Progress bar styling */
.progress {
    border-radius: 10px;
    background-color: #e9ecef;
}

.progress-bar {
    border-radius: 10px;
}

/* Appointment card styling */
.appointment-item {
    border-left: 4px solid #007bff;
    background: #f8f9fa;
    border-radius: 8px;
    margin-bottom: 15px;
    transition: all 0.3s ease;
}

.appointment-item:hover {
    transform: translateX(5px);
    box-shadow: 0 4px 15px rgba(0,0,0,0.1);
}

.appointment-time {
    color: #007bff;
    font-weight: bold;
    font-size: 1.1rem;
}

.patient-name {
    color: #333;
    font-weight: 500;
    margin-top: 5px;
}

/* Search results styling */
.search-result-item {
    padding: 10px;
    border: 1px solid #dee2e6;
    border-radius: 8px;
    margin-bottom: 10px;
    cursor: pointer;
    transition: all 0.3s ease;
}

.search-result-item:hover {
    background-color: #f8f9fa;
    border-color: #007bff;
}

/* Medical Buttons */
.btn-medical-primary {
    background: linear-gradient(135deg, #dc2626 0%, #ef4444 100%);
    border: none;
    color: white;
    padding: 12px 20px;
    border-radius: 10px;
    font-weight: 600;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(220, 38, 38, 0.3);
}

.btn-medical-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(220, 38, 38, 0.4);
    color: white;
}

.btn-medical-secondary {
    background: linear-gradient(135deg, #1e40af 0%, #3b82f6 100%);
    border: none;
    color: white;
    padding: 10px 16px;
    border-radius: 8px;
    font-weight: 500;
    transition: all 0.3s ease;
    font-size: 0.9rem;
    box-shadow: 0 3px 10px rgba(30, 64, 175, 0.3);
}

.btn-medical-secondary:hover {
    transform: translateY(-1px);
    box-shadow: 0 6px 20px rgba(30, 64, 175, 0.4);
    color: white;
}

/* Stat Cards */
.stat-card {
    background: white;
    border-radius: 15px;
    padding: 20px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    border-left: 5px solid;
    display: flex;
    align-items: center;
    gap: 15px;
}

.stat-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
}

.stat-card-primary {
    border-left-color: #1e40af;
}

.stat-card-success {
    border-left-color: #059669;
}

.stat-card-warning {
    border-left-color: #d97706;
}

.stat-icon {
    width: 50px;
    height: 50px;
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
    color: white;
}

.stat-card-primary .stat-icon {
    background: linear-gradient(135deg, #1e40af 0%, #3b82f6 100%);
}

.stat-card-success .stat-icon {
    background: linear-gradient(135deg, #059669 0%, #10b981 100%);
}

.stat-card-warning .stat-icon {
    background: linear-gradient(135deg, #d97706 0%, #f59e0b 100%);
}

.stat-content {
    flex: 1;
}

.stat-number {
    font-size: 2rem;
    font-weight: bold;
    margin: 0;
    color: #1f2937;
}

.stat-label {
    margin: 0;
    color: #6b7280;
    font-size: 0.9rem;
    font-weight: 500;
}

/* Satisfaction Section */
.satisfaction-section {
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
    border-radius: 15px;
    padding: 25px;
    text-align: center;
    border: 2px solid #e2e8f0;
}

.satisfaction-card {
    background: white;
    border-radius: 12px;
    padding: 20px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
}

.satisfaction-title {
    color: #374151;
    font-weight: 600;
    margin-bottom: 15px;
    font-size: 1rem;
}

.satisfaction-stars {
    margin-bottom: 10px;
}

.star-rating {
    font-size: 1.8rem;
    margin: 0 3px;
    color: #d1d5db;
    transition: all 0.3s ease;
}

.star-rating.filled {
    color: #fbbf24;
    text-shadow: 0 2px 4px rgba(251, 191, 36, 0.3);
}

.satisfaction-text {
    color: #6b7280;
    font-size: 0.9rem;
    font-weight: 500;
    margin: 0;
}
</style>

@section Scripts {
    <script>
        // Doctor dashboard functionality
        document.addEventListener('DOMContentLoaded', function() {
            initializeDoctorDashboard();
            loadDoctorDashboardData();
        });

        function initializeDoctorDashboard() {
            // Patient search functionality by cedula only
            const searchForm = document.getElementById('doctorPatientSearchForm');
            const searchInput = document.getElementById('doctorPatientSearchInput');

            if (searchForm) {
                searchForm.addEventListener('submit', function(e) {
                    e.preventDefault();
                    const cedula = searchInput.value.trim();
                    if (cedula) {
                        searchPatientByCedula(cedula);
                    }
                });
            }

            // Add keyboard shortcut for search (Ctrl+F)
            document.addEventListener('keydown', function(e) {
                if (e.ctrlKey && e.key === 'f') {
                    e.preventDefault();
                    searchInput.focus();
                }
            });
        }

        async function searchPatientByCedula(cedula) {
            const resultsDiv = document.getElementById('searchResults');
            resultsDiv.innerHTML = '<div class="text-center"><i class="bi bi-hourglass-split"></i> Buscando...</div>';

            try {
                const response = await fetch(`/api/doctor/search-patients-by-cedula?cedula=${encodeURIComponent(cedula)}`);
                const data = await response.json();

                if (response.ok && data.length > 0) {
                    resultsDiv.innerHTML = data.map(patient => `
                        <div class="search-result-item" onclick="viewPatientDetails(${patient.id})">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <strong>${patient.fullName}</strong>
                                    <br>
                                    <small class="text-muted">Cédula: ${patient.documentId}</small>
                                </div>
                                <div>
                                    <small class="text-muted">${patient.phoneNumber || 'Sin teléfono'}</small>
                                </div>
                            </div>
                        </div>
                    `).join('');
                } else {
                    resultsDiv.innerHTML = '<div class="text-center text-muted">No se encontraron pacientes con esa cédula</div>';
                }
            } catch (error) {
                console.error('Error searching patient:', error);
                resultsDiv.innerHTML = '<div class="text-center text-danger">Error al buscar paciente</div>';
            }
        }

        function viewPatientDetails(patientId) {
            window.location.href = `/UserDashboards/Doctor/PatientDetails/${patientId}`;
        }

        async function loadDoctorDashboardData() {
            try {
                // Test authentication first
                await testAuthentication();
                
                // Debug data to see what's in the database
                await debugData();
                
                // Load next appointment
                await loadNextAppointment();
                
                // Load all appointments
                await loadAllAppointments();
                
                // Update dashboard statistics
                await updateDashboardStats();
            } catch (error) {
                console.error('Error loading dashboard data:', error);
            }
        }

        // Debug data function
        async function debugData() {
            try {
                console.log('=== INICIANDO DEBUG DE DATOS ===');
                const response = await fetch('/api/doctor/debug-data');
                const data = await response.json();
                console.log('Debug data:', data);
                
                // Show detailed information
                if (data.allAppointments) {
                    console.log('=== TODAS LAS CITAS EN LA BASE DE DATOS ===');
                    console.log(`Total de citas encontradas: ${data.allAppointments.length}`);
                    data.allAppointments.forEach((apt, index) => {
                        console.log(`Cita ${index + 1}:`, {
                            id: apt.id,
                            fecha: apt.appointmentDateTime,
                            confirmada: apt.isConfirmed,
                            completada: apt.isCompleted,
                            cancelada: apt.isCancelled,
                            paciente: apt.patientName,
                            esFutura: apt.isFutureAppointment,
                            diasDiferencia: apt.daysDifference
                        });
                    });
                }
                
                if (data.futureAppointments && data.futureAppointments.length > 0) {
                    console.log('=== CITAS FUTURAS (que deberían aparecer) ===');
                    data.futureAppointments.forEach((apt, index) => {
                        console.log(`Futura ${index + 1}:`, apt);
                    });
                } else {
                    console.log('❌ NO HAY CITAS FUTURAS - Por eso no aparecen en el dashboard');
                }
                
                if (data.confirmedAppointments && data.confirmedAppointments.length > 0) {
                    console.log('=== CITAS CONFIRMADAS (que deberían aparecer) ===');
                    data.confirmedAppointments.forEach((apt, index) => {
                        console.log(`Confirmada ${index + 1}:`, apt);
                    });
                } else {
                    console.log('❌ NO HAY CITAS CONFIRMADAS - Por eso no aparecen las estadísticas');
                }

                console.log('=== INFORMACIÓN DEL DOCTOR ===');
                console.log('Doctor ID:', data.doctorId);
                console.log('Doctor Name:', data.doctorName);
                console.log('Hora actual:', data.currentTime);
                
                console.log('=== RESUMEN ===');
                console.log(`Total citas: ${data.totalAppointments}`);
                console.log(`Citas futuras: ${data.futureAppointmentsCount}`);
                console.log(`Citas confirmadas: ${data.confirmedAppointmentsCount}`);
                
            } catch (error) {
                console.error('Error en debug data:', error);
            }
        }

        async function testAuthentication() {
            try {
                console.log('Testing authentication...');
                const response = await fetch('/api/doctor/test-auth');
                const data = await response.json();
                console.log('Auth test result:', data);
                
                if (!response.ok || !data.authenticated || !data.doctorFound) {
                    console.warn('Authentication issue detected:', data);
                }
            } catch (error) {
                console.error('Error testing authentication:', error);
            }
        }

        async function loadNextAppointment() {
            try {
                console.log('Loading next appointment...');
                const response = await fetch('/api/doctor/next-appointment');
                const data = await response.json();
                console.log('Next appointment response:', response.status, data);

                const nextAppointmentDiv = document.getElementById('nextAppointment');

                if (response.ok && data.appointment) {
                    const appointment = data.appointment;
                    nextAppointmentDiv.innerHTML = `
                        <div class="appointment-item p-3">
                            <div class="row align-items-center">
                                <div class="col-md-3">
                                    <div class="appointment-time">${appointment.time}</div>
                                    <small class="text-muted">${appointment.date}</small>
                                </div>
                                <div class="col-md-6">
                                    <div class="patient-name">${appointment.patientName}</div>
                                    <small class="text-muted">Cédula: ${appointment.patientDocument}</small>
                                </div>
                                <div class="col-md-3 text-end">
                                    <span class="badge ${appointment.statusClass}">${appointment.status}</span>
                                </div>
                            </div>
                        </div>
                    `;
                } else {
                    console.log('No next appointment found');
                    nextAppointmentDiv.innerHTML = `
                        <div class="text-center py-4">
                            <i class="bi bi-calendar-x fs-1 text-muted"></i>
                            <p class="text-muted mt-2 mb-0">No hay próximas citas programadas</p>
                        </div>
                    `;
                }
            } catch (error) {
                console.error('Error loading next appointment:', error);
                document.getElementById('nextAppointment').innerHTML = `
                    <div class="text-center py-4">
                        <i class="bi bi-exclamation-triangle fs-1 text-warning"></i>
                        <p class="text-muted mt-2 mb-0">Error al cargar próxima cita: ${error.message}</p>
                    </div>
                `;
            }
        }

        async function loadAllAppointments() {
            try {
                console.log('Loading all appointments...');
                const response = await fetch('/api/doctor/upcoming-appointments');
                const data = await response.json();
                console.log('All appointments response:', response.status, data);

                const appointmentsListDiv = document.getElementById('allAppointmentsList');

                if (response.ok && data.appointments && data.appointments.length > 0) {
                    appointmentsListDiv.innerHTML = data.appointments.map(appointment => `
                        <div class="appointment-item p-3">
                            <div class="row align-items-center">
                                <div class="col-md-2">
                                    <div class="appointment-time">${appointment.time}</div>
                                    <small class="text-muted">${appointment.date}</small>
                                </div>
                                <div class="col-md-4">
                                    <div class="patient-name">${appointment.patientName}</div>
                                    <small class="text-muted">Cédula: ${appointment.patientDocument}</small>
                                </div>
                                <div class="col-md-3">
                                    <small class="text-muted">${appointment.notes || 'Sin notas'}</small>
                                </div>
                                <div class="col-md-2 text-end">
                                    <span class="badge ${appointment.statusClass}">${appointment.status}</span>
                                </div>
                                <div class="col-md-1 text-end">
                                    <button class="btn btn-sm btn-outline-primary" onclick="viewAppointmentDetails(${appointment.id})">
                                        <i class="bi bi-eye"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    `).join('');
                } else {
                    console.log('No appointments found');
                    appointmentsListDiv.innerHTML = `
                        <div class="text-center py-4">
                            <i class="bi bi-calendar-x fs-1 text-muted"></i>
                            <p class="text-muted mt-2 mb-0">No hay citas programadas</p>
                        </div>
                    `;
                }
            } catch (error) {
                console.error('Error loading appointments:', error);
                document.getElementById('allAppointmentsList').innerHTML = `
                    <div class="text-center py-4">
                        <i class="bi bi-exclamation-triangle fs-1 text-warning"></i>
                        <p class="text-muted mt-2 mb-0">Error al cargar citas: ${error.message}</p>
                    </div>
                `;
            }
        }

        async function updateDashboardStats() {
            try {
                const response = await fetch('/api/doctor/dashboard-stats');
                const data = await response.json();

                if (response.ok) {
                    console.log('Dashboard stats loaded:', data);
                    
                    // Update statistics
                    document.getElementById('todayAppointmentsStat').textContent = data.todayAppointments || 0;
                    document.getElementById('confirmedAppointmentsStat').textContent = data.confirmedAppointments || 0;
                    document.getElementById('completedAppointmentsStat').textContent = data.completedAppointments || 0;
                    
                    // Update satisfaction stars (each star = 20%)
                    const satisfactionPercentage = data.satisfactionPercentage || 0;
                    updateSatisfactionStars(satisfactionPercentage);
                }
            } catch (error) {
                console.error('Error updating dashboard stats:', error);
            }
        }

        function updateSatisfactionStars(percentage) {
            const stars = document.querySelectorAll('#satisfactionStars i');
            const filledStars = Math.floor(percentage / 20); // Each star = 20%
            
            stars.forEach((star, index) => {
                if (index < filledStars) {
                    star.className = 'bi bi-star-fill star-rating filled';
                } else {
                    star.className = 'bi bi-star star-rating';
                }
            });
            
            document.getElementById('satisfactionText').textContent = `${percentage}% de satisfacción`;
        }

        function viewAppointmentDetails(appointmentId) {
            window.location.href = `/Appointments/Details/${appointmentId}`;
        }
    </script>
} 
