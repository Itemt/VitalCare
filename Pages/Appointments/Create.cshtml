@page
@model CitasEPS.Pages.Appointments.CreateModel

@{
    ViewData["Title"] = "Agendar Nueva Cita";
    var patientName = ViewData["PatientName"] as string ?? "Paciente Desconocido";
}

<div class="row justify-content-center">
    <div class="col-md-8"> @* Adjusted for a typical form width *@
        <div class="card shadow-sm">
            <div class="card-header bg-primary text-white">
                <h3 class="mb-0"><i class="bi bi-calendar-plus-fill"></i> @ViewData["Title"]</h3>
            </div>
            <div class="card-body">
                <h4 class="card-title mb-3">Agendando cita para: <span class="text-primary fw-semibold">@patientName</span></h4>
                <hr class="mb-4">
                <form method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                    @* Patient dropdown removed - Patient is automatically assigned based on login *@
                    @* <div class="form-group mb-3">
                        <label asp-for="Appointment.PatientId" class="control-label"></label>
                        <select asp-for="Appointment.PatientId" class ="form-control" asp-items="Model.PatientNameSL">
                            <option value="">-- Seleccione Paciente --</option>
                        </select>
                        <span asp-validation-for="Appointment.PatientId" class="text-danger"></span>
                    </div> *@

                    <div class="form-group mb-3">
                        <label asp-for="SelectedSpecialtyId" class="form-label fw-semibold">Especialidad</label>
                        <select id="specialtyDropdown" asp-for="SelectedSpecialtyId" class ="form-select" asp-items="Model.SpecialtySL">
                            <option value="">-- Seleccione Especialidad --</option>
                        </select>
                        <span asp-validation-for="SelectedSpecialtyId" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="Appointment.DoctorId" class="form-label fw-semibold">Médico</label>
                         <select id="doctorDropdown" asp-for="Appointment.DoctorId" class ="form-select" asp-items='ViewData["DoctorNameSL"] as SelectList' disabled>
                            <option value="">-- Seleccione Médico --</option>
                         </select>
                        <span asp-validation-for="Appointment.DoctorId" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="Appointment.AppointmentDateTime" class="form-label fw-semibold">Fecha y Hora de la Cita</label>
                        @*
                         * Add min attribute with today's date/time in ISO format.
                         * The specific format might depend on the datetimepicker library used,
                         * but this is the standard HTML5 approach.
                         *@ 
                        <input asp-for="Appointment.AppointmentDateTime" class="form-control datetimepicker" placeholder="Seleccione fecha y hora"/>
                        <span asp-validation-for="Appointment.AppointmentDateTime" class="text-danger"></span>
                        <small class="form-text text-muted">Seleccione la fecha y hora deseada para la cita.</small>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="Appointment.Notes" class="form-label fw-semibold">Notas / Motivo de la Cita (Opcional)</label>
                        <textarea asp-for="Appointment.Notes" class="form-control" rows="3" placeholder="Breve descripción del motivo de la consulta..."></textarea>
                        <span asp-validation-for="Appointment.Notes" class="text-danger"></span>
                    </div>

                    @* IsConfirmed is false by default, usually confirmed later by admin/staff *@
                    @*<div class="form-group form-check mb-3">
                        <label class="form-check-label">
                            <input class="form-check-input" asp-for="Appointment.IsConfirmed" /> @Html.DisplayNameFor(model => model.Appointment.IsConfirmed)
                        </label>
                    </div>*@

                    <div class="card-footer bg-light text-end"> @* Actions in footer, aligned to end *@
                        <a asp-page="./Index" class="btn btn-secondary me-2"><i class="bi bi-x-circle"></i> Cancelar</a>
                        <button type="submit" class="btn btn-primary"><i class="bi bi-calendar-check"></i> Agendar Cita</button>
                    </div>
                </form>
            </div> @* End card-body *@
        </div> @* End card *@
    </div> @* End col *@
</div> @* End row *@

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(function () {
            $('#specialtyDropdown').change(function () {
                var specialtyId = $(this).val();
                var doctorDropdown = $('#doctorDropdown');
                doctorDropdown.empty().append('<option value="">Cargando médicos...</option>').prop('disabled', true);

                if (specialtyId) {
                    $.ajax({
                        url: '?handler=DoctorsBySpecialty&specialtyId=' + specialtyId,
                        type: 'GET',
                        success: function (data) {
                            doctorDropdown.empty().append('<option value="">-- Seleccione Médico --</option>');
                            $.each(data, function (i, doctor) {
                                doctorDropdown.append($('<option>', {
                                    value: doctor.id,
                                    text: doctor.fullName
                                }));
                            });
                            doctorDropdown.prop('disabled', false);
                        },
                        error: function () {
                            doctorDropdown.empty().append('<option value="">Error al cargar médicos</option>');
                            // Consider adding more robust error handling or user feedback
                        }
                    });
                } else {
                    doctorDropdown.empty().append('<option value="">-- Seleccione Médico --</option>').prop('disabled', true);
                }
            });
        });
    </script>
} 