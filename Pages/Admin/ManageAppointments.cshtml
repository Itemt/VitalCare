@page
@model CitasEPS.Pages.Admin.ManageAppointmentsModel
@{
    ViewData["Title"] = "Gestionar Citas";
}

<h1 class="display-4"><i class="bi bi-calendar2-check-fill"></i> @ViewData["Title"]</h1>

<p>
    <a asp-page="./Appointments/Create" class="btn btn-success mb-3"><i class="bi bi-plus-circle"></i> Crear Nueva Cita</a>
</p>

@if (!Model.Appointments.Any())
{
    <div class="alert alert-info" role="alert">
        No hay citas registradas en el sistema.
    </div>
}
else
{
    <table class="table table-striped table-hover table-sm">
        <thead class="table-primary">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Appointments[0].AppointmentDateTime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Appointments[0].Patient)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Appointments[0].Doctor)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Appointments[0].Doctor.Specialty)
                </th>
                 <th>
                    @Html.DisplayNameFor(model => model.Appointments[0].IsConfirmed)
                </th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
    @foreach (var item in Model.Appointments)
    {
            <tr class="@(item.AppointmentDateTime < DateTime.Now ? "table-secondary" : "")"> @* Marcar citas pasadas en gris *@
                <td>
                    @Html.DisplayFor(modelItem => item.AppointmentDateTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Patient.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Doctor.FullName)
                </td>
                 <td>
                    @Html.DisplayFor(modelItem => item.Doctor.Specialty.Name)
                </td>
                 <td>
                    @if (item.IsConfirmed)
                    {
                        <span class="badge bg-success">SÃ­</span>
                    }
                    else
                    {
                        <span class="badge bg-warning text-dark">No</span>
                    }
                </td>
                <td>
                    <a asp-page="./Appointments/Details" asp-route-id="@item.Id" class="btn btn-sm btn-info" title="Ver Detalles"><i class="bi bi-info-circle"></i></a>
                    @if (item.AppointmentDateTime >= DateTime.Now && !item.IsCancelled && !item.IsCompleted)
                    {
                        <a asp-page="./Appointments/SetCancelled" asp-route-id="@item.Id" class="btn btn-sm btn-warning" title="Marcar como Cancelada"><i class="bi bi-calendar-minus"></i></a>
                    }
                    @if (item.AppointmentDateTime >= DateTime.Now) @* Solo permitir eliminar citas futuras (o no completadas/canceladas) *@
                    {
                        <a asp-page="./Appointments/Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger" title="Eliminar Cita Permanentemente"><i class="bi bi-trash"></i></a>
                    }
                    else if (item.IsCancelled)
                    {
                        <span class="btn btn-sm btn-outline-danger disabled" title="Cita Cancelada"><i class="bi bi-calendar-x"></i></span>
                    }
                    else if (item.IsCompleted)
                    {
                        <span class-="btn btn-sm btn-outline-success disabled" title="Cita Completada"><i class="bi bi-check-all"></i></span>
                    }
                    else // Cita pasada y no cancelada/completada (ej. No Show)
                    {
                         <span class="btn btn-sm btn-secondary disabled" title="Cita Pasada"><i class="bi bi-check-circle"></i></span>
                    }
                </td>
            </tr>
    }
        </tbody>
    </table>
}
